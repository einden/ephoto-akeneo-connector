<?php

    namespace Einden\Ephoto\ConnectorBundle;

    use Monolog\Logger;
    use Oro\Bundle\ConfigBundle\Config\ConfigManager;
    use Pim\Bundle\CatalogBundle\Entity\Channel;
    use Pim\Component\Catalog\Model\CategoryInterface;
    use Pim\Component\Catalog\Model\ProductInterface;
    use Symfony\Component\HttpKernel\Kernel;
    use Symfony\Component\Routing\RouterInterface;
    use Symfony\Component\Serializer\SerializerInterface;

    class Ephoto
    {

        /**
         * BaseUrl
         * @var string
         */
        private $baseUrl;

        /**
         * @var RouterInterface
         */
        private $router;

        /**
         * @var SerializerInterface
         */
        private $serializer;
        /**
         * @var Kernel
         */
        private $kernel;

        /**
         * @var Logger
         */
        private $logger;

        /**
         * @var string
         */
        private $systemIdentifier;

        /**
         * Tessa constructor.
         *
         * @param                     $config
         * @param RouterInterface     $router
         * @param SerializerInterface $serializer
         * @param Kernel              $kernel
         * @param Logger              $logger
         */
        public function __construct(
                ConfigManager $oroGlobal,
                RouterInterface $router,
                SerializerInterface $serializer,
                Kernel $kernel,
                Logger $logger
        ) {
            $this->baseUrl = $oroGlobal->get('pim_einden_ephoto_connector.base_url');
            $this->systemIdentifier = $oroGlobal->get('pim_einden_ephoto_connector.system_identifier');
            $this->router = $router;
            $this->serializer = $serializer;
            $this->kernel = $kernel;
            $this->logger = $logger;
        }

        /**
         * @return string
         */
        public function getBaseUrl()
        {
            return $this->baseUrl;
        }	

        /**
         * @return string
         */
        public function getSystemIdentifier()
        {
            return $this->systemIdentifier;
        }

    }
